<?xml version="1.0"?>
<launch>
  <arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />
  <arg name="gazebo"      default="true" />

  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J panda_joint1 0
                -J panda_joint2 -0.785398163
                -J panda_joint3 0
                -J panda_joint4 -2.35619449
                -J panda_joint5 0
                -J panda_joint6 1.57079632679
                -J panda_joint7 0.785398163397
                -J panda_finger_joint1 0.001
                -J panda_finger_joint2 0.001"
       />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
    <!-- Always start in paused mode, and only unpause when spawning the model -->
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="use_sim_time" value="true"/>
  </include>
  
  <param name="robot_description"
         command="xacro $(find pandaqb_movegroup_control)/urdf/only_panda_description.urdf.xacro
                  gazebo:=$(arg gazebo)">
  </param>

  <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
  <rosparam file="$(find movit_config_only_panda)/config/default_controllers.yaml" subst_value="true" />

  <node name="panda_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        respawn="false" 
        output="screen"
        args="-urdf -param robot_description -model panda -unpause
              $(arg initial_joint_positions)"/>

   <!-- spawns the controller after the robot was put into its initial joint pose  -->
  <node pkg="controller_manager"
        type="spawner"
        name="panda_controller_spawner"
        respawn="false" output="screen"
        args="--wait-for initialized franka_state_controller effort_joint_trajectory_controller" />
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
    <rosparam param="source_list">[franka_state_controller/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node>
</launch>

